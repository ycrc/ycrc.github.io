---
date: '2023-10-01'
---

## October 2023

### Announcements

#### McCleary Maintenance

The biannual scheduled maintenance for the McCleary cluster will be occurring Oct 3-5. During this time, the cluster will be unavailable. See the McCleary maintenance email announcements for more details.

#### Interactive jobs on `day` on McCleary

Interactive jobs are now allowed to be run on the `day` partition on McCleary. Note you are still limited to 4 interactive-style jobs of any kind (salloc or OpenOnDemand) at one time. Additional instances will be rejected until you delete older open instances. For OnDemand jobs, closing the window does not terminate the interactive app job. To terminate the job, click the "Delete" button in your "My Interactive Apps" page in the web portal.

#### "Papermill" for Jupyter Command-Line Execution

Many scientific workflows start as interactive Jupyter notebooks, and our Open OnDemand portal has dramatically simplified deploying these notebooks on cluster resources.  However, the step from running notebooks interactively to running jobs as a batch script can be challenging and is often a barrier to migrating to using `sbatch` to run workflows non-interactively. 

To help solve this problem, there are a handful of utilities that can execute a notebook as if you were manually hitting "shift-Enter" for each cell. Of note is [Papermill](https://papermill.readthedocs.io/en/latest/) which provides a powerful set of tools to bridge between interactive and batch-mode computing.

To get started, install papermill into your Conda environments:

```
module load miniconda
conda install papermill
```

Then you can simply evaluate a notebook, preserving figures and output inside the notebook, like this:

```
papermill /path/to/notebook.ipynb
```

This can be run inside a batch job that might look like this:

```
#!/bin/bash
#SBATCH -p day
#SBATCH -c 1
#SBATCH -t 6:00:00

module purge miniconda
conda activate my_env
papermill /path/to/notebook.ipynb

```

Variables can also be parameterized and passed in as command-line options so that you can run multiple copies simultaneously with different input variables. For more information see the [Papermill docs pages](https://papermill.readthedocs.io/.
